{"version":3,"file":"static/js/410.5a926960.chunk.js","mappings":"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","sources":["../node_modules/react-map-gl/src/components/use-map.tsx","../node_modules/react-map-gl/src/utils/transform.ts","../node_modules/react-map-gl/src/utils/style-utils.ts","../node_modules/react-map-gl/src/utils/deep-equal.ts","../node_modules/react-map-gl/src/mapbox/mapbox.ts","../node_modules/react-map-gl/src/mapbox/create-ref.ts","../node_modules/react-map-gl/src/utils/use-isomorphic-layout-effect.ts","../node_modules/react-map-gl/src/utils/set-globals.ts","../node_modules/react-map-gl/src/components/map.tsx","../node_modules/react-map-gl/src/utils/apply-react-style.ts","../node_modules/react-map-gl/src/components/marker.ts","../node_modules/react-map-gl/src/components/popup.ts","../node_modules/react-map-gl/src/components/use-control.ts","../node_modules/react-map-gl/src/components/attribution-control.ts","../node_modules/react-map-gl/src/components/fullscreen-control.ts","../node_modules/react-map-gl/src/components/geolocate-control.ts","../node_modules/react-map-gl/src/components/navigation-control.ts","../node_modules/react-map-gl/src/components/scale-control.ts","../node_modules/react-map-gl/src/utils/assert.ts","../node_modules/react-map-gl/src/components/source.ts","../node_modules/react-map-gl/src/components/layer.ts"],"sourcesContent":["import * as React from 'react';\nimport {useState, useCallback, useContext} from 'react';\n\nimport {MapRef} from '../mapbox/create-ref';\n\ntype MountedMapsContextValue = {\n  maps: {[id: string]: MapRef};\n  onMapMount: (map: MapRef, id: string) => void;\n  onMapUnmount: (id: string) => void;\n};\n\nexport const MountedMapsContext = React.createContext<MountedMapsContextValue>(null);\n\nexport const MapProvider: React.FC<{}> = props => {\n  const [maps, setMaps] = useState<{[id: string]: MapRef}>({});\n\n  const onMapMount = useCallback((map: MapRef, id: string = 'default') => {\n    setMaps(currMaps => {\n      if (currMaps[id]) {\n        throw new Error(`Multiple maps with the same id: ${id}`);\n      }\n      return {...currMaps, [id]: map};\n    });\n  }, []);\n\n  const onMapUnmount = useCallback((id: string = 'default') => {\n    setMaps(currMaps => {\n      if (currMaps[id]) {\n        const nextMaps = {...currMaps};\n        delete nextMaps[id];\n        return nextMaps;\n      }\n      return currMaps;\n    });\n  }, []);\n\n  return (\n    <MountedMapsContext.Provider\n      value={{\n        maps,\n        onMapMount,\n        onMapUnmount\n      }}\n    >\n      {props.children}\n    </MountedMapsContext.Provider>\n  );\n};\n\nexport function useMap() {\n  const {maps} = useContext(MountedMapsContext);\n  return maps;\n}\n","import type {MapboxProps} from '../mapbox/mapbox';\nimport type {Transform, ViewState} from '../types';\n\n/**\n * Capture a transform's current state\n * @param transform\n * @returns descriptor of the view state\n */\nexport function transformToViewState(tr: Transform): ViewState {\n  return {\n    longitude: tr.center.lng,\n    latitude: tr.center.lat,\n    zoom: tr.zoom,\n    pitch: tr.pitch,\n    bearing: tr.bearing,\n    padding: tr.padding\n  };\n}\n\n/**\n * Mutate a transform to match the given view state\n * @param transform\n * @param viewState\n * @returns true if the transform has changed\n */\nexport function applyViewStateToTransform(tr: Transform, props: MapboxProps): boolean {\n  const v: Partial<ViewState> = props.viewState || props;\n  let changed = false;\n\n  if ('longitude' in v && 'latitude' in v) {\n    const center = tr.center;\n    // @ts-ignore\n    tr.center = new center.constructor(v.longitude, v.latitude);\n    changed = changed || center !== tr.center;\n  }\n  if ('zoom' in v) {\n    const zoom = tr.zoom;\n    tr.zoom = v.zoom;\n    changed = changed || zoom !== tr.zoom;\n  }\n  if ('bearing' in v) {\n    const bearing = tr.bearing;\n    tr.bearing = v.bearing;\n    changed = changed || bearing !== tr.bearing;\n  }\n  if ('pitch' in v) {\n    const pitch = tr.pitch;\n    tr.pitch = v.pitch;\n    changed = changed || pitch !== tr.pitch;\n  }\n  if (v.padding && !tr.isPaddingEqual(v.padding)) {\n    changed = true;\n    tr.padding = v.padding;\n  }\n  return changed;\n}\n","import {ImmutableLike, MapboxStyle} from '../types';\n\nconst refProps = ['type', 'source', 'source-layer', 'minzoom', 'maxzoom', 'filter', 'layout'];\n\n// Prepare a map style object for diffing\n// If immutable - convert to plain object\n// Work around some issues in older styles that would fail Mapbox's diffing\nexport function normalizeStyle(style: string | MapboxStyle | ImmutableLike): string | MapboxStyle {\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'string') {\n    return style;\n  }\n  if ('toJS' in style) {\n    style = style.toJS() as MapboxStyle;\n  }\n  if (!style.layers) {\n    return style;\n  }\n  const layerIndex = {};\n\n  for (const layer of style.layers) {\n    layerIndex[layer.id] = layer;\n  }\n\n  const layers = style.layers.map(layer => {\n    // @ts-expect-error\n    const layerRef = layerIndex[layer.ref];\n    let normalizedLayer = null;\n\n    if ('interactive' in layer) {\n      normalizedLayer = {...layer};\n      // Breaks style diffing :(\n      delete normalizedLayer.interactive;\n    }\n\n    // Style diffing doesn't work with refs so expand them out manually before diffing.\n    if (layerRef) {\n      normalizedLayer = normalizedLayer || {...layer};\n      delete normalizedLayer.ref;\n      // https://github.com/mapbox/mapbox-gl-js/blob/master/src/style-spec/deref.js\n      for (const propName of refProps) {\n        if (propName in layerRef) {\n          normalizedLayer[propName] = layerRef[propName];\n        }\n      }\n    }\n\n    return normalizedLayer || layer;\n  });\n\n  // Do not mutate the style object provided by the user\n  return {...style, layers};\n}\n","import type {PointLike} from '../types';\n\n/**\n * Compare two points\n * @param a\n * @param b\n * @returns true if the points are equal\n */\nexport function arePointsEqual(a?: PointLike, b?: PointLike): boolean {\n  const ax = Array.isArray(a) ? a[0] : a ? a.x : 0;\n  const ay = Array.isArray(a) ? a[1] : a ? a.y : 0;\n  const bx = Array.isArray(b) ? b[0] : b ? b.x : 0;\n  const by = Array.isArray(b) ? b[1] : b ? b.y : 0;\n  return ax === bx && ay === by;\n}\n\n/**\n * Compare any two objects\n * @param a\n * @param b\n * @returns true if the objects are deep equal\n */\nexport function deepEqual(a: any, b: any): boolean {\n  if (a === b) {\n    return true;\n  }\n  if (!a || !b) {\n    return false;\n  }\n  if (Array.isArray(a)) {\n    if (!Array.isArray(b) || a.length !== b.length) {\n      return false;\n    }\n    for (let i = 0; i < a.length; i++) {\n      if (!deepEqual(a[i], b[i])) {\n        return false;\n      }\n    }\n    return true;\n  } else if (Array.isArray(b)) {\n    return false;\n  }\n  if (typeof a === 'object' && typeof b === 'object') {\n    const aKeys = Object.keys(a);\n    const bKeys = Object.keys(b);\n    if (aKeys.length !== bKeys.length) {\n      return false;\n    }\n    for (const key of aKeys) {\n      if (!b.hasOwnProperty(key)) {\n        return false;\n      }\n      if (!deepEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return false;\n}\n","import {transformToViewState, applyViewStateToTransform} from '../utils/transform';\nimport {normalizeStyle} from '../utils/style-utils';\nimport {deepEqual} from '../utils/deep-equal';\n\nimport type {\n  Transform,\n  ProjectionSpecification,\n  ViewState,\n  ViewStateChangeEvent,\n  DragPanOptions,\n  ZoomRotateOptions,\n  TransformRequestFunction,\n  Light,\n  Fog,\n  TerrainSpecification,\n  MapboxStyle,\n  ImmutableLike,\n  LngLatBoundsLike,\n  FitBoundsOptions,\n  MapMouseEvent,\n  MapLayerMouseEvent,\n  MapLayerTouchEvent,\n  MapWheelEvent,\n  MapBoxZoomEvent,\n  MapStyleDataEvent,\n  MapSourceDataEvent,\n  MapboxEvent,\n  ErrorEvent,\n  MapboxGeoJSONFeature,\n  MapboxMap\n} from '../types';\n\nexport type MapboxProps = Partial<ViewState> & {\n  // Init options\n  mapboxAccessToken?: string;\n\n  /** Camera options used when constructing the Map instance */\n  initialViewState?: Partial<ViewState> & {\n    /** The initial bounds of the map. If bounds is specified, it overrides longitude, latitude and zoom options. */\n    bounds?: LngLatBoundsLike;\n    /** A fitBounds options object to use only when setting the bounds option. */\n    fitBoundsOptions?: FitBoundsOptions;\n  };\n\n  /** If provided, render into an external WebGL context */\n  gl?: WebGLRenderingContext;\n\n  /**\n   * If true, the gl context will be created with MSA antialiasing, which can be useful for antialiasing custom layers.\n   * This is false by default as a performance optimization.\n   * @default false\n   */\n  antialias?: boolean;\n  /**\n   * If true, an attribution control will be added to the map.\n   * @default true\n   */\n  attributionControl?: boolean;\n  /**\n   * Snap to north threshold in degrees.\n   * @default 7\n   */\n  bearingSnap?: number;\n  /**\n   * The max number of pixels a user can shift the mouse pointer during a click for it to be\n   * considered a valid click (as opposed to a mouse drag).\n   * @default 3\n   */\n  clickTolerance?: number;\n  /**\n   * If `true`, Resource Timing API information will be collected for requests made by GeoJSON\n   * and Vector Tile web workers (this information is normally inaccessible from the main\n   * Javascript thread). Information will be returned in a `resourceTiming` property of\n   * relevant `data` events.\n   * @default false\n   */\n  collectResourceTiming?: boolean;\n  /**\n   * If `true` , scroll zoom will require pressing the ctrl or ⌘ key while scrolling to zoom map,\n   * and touch pan will require using two fingers while panning to move the map.\n   * Touch pitch will require three fingers to activate if enabled.\n   */\n  cooperativeGestures?: boolean;\n  /**\n   * If `true`, symbols from multiple sources can collide with each other during collision\n   * detection. If `false`, collision detection is run separately for the symbols in each source.\n   * @default true\n   */\n  crossSourceCollisions?: boolean;\n  /** String or strings to show in an AttributionControl.\n   * Only applicable if options.attributionControl is `true`. */\n  customAttribution?: string | string[];\n  /**\n   * Controls the duration of the fade-in/fade-out animation for label collisions, in milliseconds.\n   * This setting affects all symbol layers. This setting does not affect the duration of runtime\n   * styling transitions or raster tile cross-fading.\n   * @default 300\n   */\n  fadeDuration?: number;\n  /** If true, map creation will fail if the implementation determines that the performance of the created WebGL context would be dramatically lower than expected.\n   * @default false\n   */\n  failIfMajorPerformanceCaveat?: boolean;\n  /** If `true`, the map's position (zoom, center latitude, center longitude, bearing, and pitch) will be synced with the hash fragment of the page's URL.\n   * For example, `http://path/to/my/page.html#2.59/39.26/53.07/-24.1/60`.\n   * An additional string may optionally be provided to indicate a parameter-styled hash,\n   * e.g. http://path/to/my/page.html#map=2.59/39.26/53.07/-24.1/60&foo=bar, where foo\n   * is a custom parameter and bar is an arbitrary hash distinct from the map hash.\n   */\n  hash?: boolean | string;\n  /** If false, no mouse, touch, or keyboard listeners are attached to the map, so it will not respond to input\n   * @default true\n   */\n  interactive?: boolean;\n  /** A patch to apply to the default localization table for UI strings, e.g. control tooltips.\n   * The `locale` object maps namespaced UI string IDs to translated strings in the target language;\n   * see `src/ui/default_locale.js` for an example with all supported string IDs.\n   * The object may specify all UI strings (thereby adding support for a new translation) or\n   * only a subset of strings (thereby patching the default translation table).\n   */\n  locale?: {[key: string]: string};\n  /**\n   * Overrides the generation of all glyphs and font settings except font-weight keywords\n   * Also overrides localIdeographFontFamily\n   * @default null\n   */\n  localFontFamily?: string;\n  /**\n   * If specified, defines a CSS font-family for locally overriding generation of glyphs in the\n   * 'CJK Unified Ideographs' and 'Hangul Syllables' ranges. In these ranges, font settings from\n   * the map's style will be ignored, except for font-weight keywords (light/regular/medium/bold).\n   * The purpose of this option is to avoid bandwidth-intensive glyph server requests.\n   * @default \"sans-serif\"\n   */\n  localIdeographFontFamily?: string;\n  /**\n   * A string representing the position of the Mapbox wordmark on the map.\n   * @default \"bottom-left\"\n   */\n  logoPosition?: 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right';\n  /**\n   * The maximum number of tiles stored in the tile cache for a given source. If omitted, the\n   * cache will be dynamically sized based on the current viewport.\n   * @default null\n   */\n  maxTileCacheSize?: number;\n  /**\n   * If true, map will prioritize rendering for performance by reordering layers\n   * If false, layers will always be drawn in the specified order\n   * @default true\n   */\n  optimizeForTerrain?: boolean;\n  /**\n   * If `false`, the map's pitch (tilt) control with \"drag to rotate\" interaction will be disabled.\n   * @default true\n   */\n  pitchWithRotate?: boolean;\n  /** If true, The maps canvas can be exported to a PNG using map.getCanvas().toDataURL();. This is false by default as a performance optimization.\n   * @default false\n   */\n  preserveDrawingBuffer?: boolean;\n  /**\n   * If `false`, the map won't attempt to re-request tiles once they expire per their HTTP\n   * `cacheControl`/`expires` headers.\n   * @default true\n   */\n  refreshExpiredTiles?: boolean;\n  /**\n   * Allows for the usage of the map in automated tests without an accessToken with custom self-hosted test fixtures.\n   * @default null\n   */\n  testMode?: boolean;\n  /**\n   * If  true, the map will automatically resize when the browser window resizes\n   * @default true\n   */\n  trackResize?: boolean;\n  /**\n   * A callback run before the Map makes a request for an external URL. The callback can be\n   * used to modify the url, set headers, or set the credentials property for cross-origin requests.\n   * @default null\n   */\n  transformRequest?: TransformRequestFunction;\n\n  // Handlers\n\n  /**\n   * If true, enable the \"box zoom\" interaction (see BoxZoomHandler)\n   * @default true\n   */\n  boxZoom?: boolean;\n  /**\n   * If true, enable the \"double click to zoom\" interaction (see DoubleClickZoomHandler).\n   * @default true\n   */\n  doubleClickZoom?: boolean;\n  /**\n   * If `true`, the \"drag to pan\" interaction is enabled.\n   * An `Object` value is passed as options to {@link DragPanHandler#enable}.\n   * @default true\n   */\n  dragPan?: boolean | DragPanOptions;\n  /**\n   * If true, enable the \"drag to rotate\" interaction (see DragRotateHandler).\n   * @default true\n   */\n  dragRotate?: boolean;\n  /**\n   * If true, enable keyboard shortcuts (see KeyboardHandler).\n   * @default true\n   */\n  keyboard?: boolean;\n  /**\n   * If `true`, the \"scroll to zoom\" interaction is enabled.\n   * An `Object` value is passed as options to {@link ScrollZoomHandler#enable}.\n   * @default true\n   */\n  scrollZoom?: boolean | ZoomRotateOptions;\n  /**\n   * If `true`, the \"drag to pitch\" interaction is enabled.\n   * An `Object` value is passed as options to {@link TouchPitchHandler#enable}.\n   * @default true\n   */\n  touchPitch?: boolean;\n  /**\n   * If `true`, the \"pinch to rotate and zoom\" interaction is enabled.\n   * An `Object` value is passed as options to {@link TouchZoomRotateHandler#enable}.\n   * @default true\n   */\n  touchZoomRotate?: boolean | ZoomRotateOptions;\n\n  // Constraints\n\n  /** If set, the map is constrained to the given bounds. */\n  maxBounds?: LngLatBoundsLike;\n  /** Maximum pitch of the map. */\n  maxPitch?: number;\n  /** Maximum zoom of the map. */\n  maxZoom?: number;\n  /** Minimum pitch of the map. */\n  minPitch?: number;\n  /** Minimum zoom of the map. */\n  minZoom?: number;\n\n  /** For external controller to override the camera state */\n  viewState?: ViewState & {\n    width: number;\n    height: number;\n  };\n\n  // Styling\n\n  /** Mapbox style */\n  mapStyle?: string | MapboxStyle | ImmutableLike;\n  /** Enable diffing when the map style changes\n   * @default true\n   */\n  styleDiffing?: boolean;\n  /** The fog property of the style. Must conform to the Fog Style Specification .\n   * If `null` is provided, removes the fog from the map. */\n  fog?: Fog | null;\n  /** Light properties of the map. */\n  light?: Light;\n  /** Terrain property of the style. Must conform to the Terrain Style Specification .\n   * If `null` is provided, removes terrain from the map. */\n  terrain?: TerrainSpecification | null;\n  /** Default layers to query on pointer events */\n  interactiveLayerIds?: string[];\n  /** The projection the map should be rendered in\n   * @default \"mercator\"\n   */\n  projection?: ProjectionSpecification | string;\n  /**\n   * If `true`, multiple copies of the world will be rendered, when zoomed out.\n   * @default true\n   */\n  renderWorldCopies?: boolean;\n  /** CSS cursor */\n  cursor?: string;\n\n  // Callbacks\n  onMouseDown?: (e: MapLayerMouseEvent) => void;\n  onMouseUp?: (e: MapLayerMouseEvent) => void;\n  onMouseOver?: (e: MapLayerMouseEvent) => void;\n  onMouseMove?: (e: MapLayerMouseEvent) => void;\n  onClick?: (e: MapLayerMouseEvent) => void;\n  onDblClick?: (e: MapLayerMouseEvent) => void;\n  onMouseEnter?: (e: MapLayerMouseEvent) => void;\n  onMouseLeave?: (e: MapLayerMouseEvent) => void;\n  onMouseOut?: (e: MapLayerMouseEvent) => void;\n  onContextMenu?: (e: MapLayerMouseEvent) => void;\n  onTouchStart?: (e: MapLayerTouchEvent) => void;\n  onTouchEnd?: (e: MapLayerTouchEvent) => void;\n  onTouchMove?: (e: MapLayerTouchEvent) => void;\n  onTouchCancel?: (e: MapLayerTouchEvent) => void;\n\n  onMoveStart?: (e: ViewStateChangeEvent) => void;\n  onMove?: (e: ViewStateChangeEvent) => void;\n  onMoveEnd?: (e: ViewStateChangeEvent) => void;\n  onDragStart?: (e: ViewStateChangeEvent) => void;\n  onDrag?: (e: ViewStateChangeEvent) => void;\n  onDragEnd?: (e: ViewStateChangeEvent) => void;\n  onZoomStart?: (e: ViewStateChangeEvent) => void;\n  onZoom?: (e: ViewStateChangeEvent) => void;\n  onZoomEnd?: (e: ViewStateChangeEvent) => void;\n  onRotateStart?: (e: ViewStateChangeEvent) => void;\n  onRotate?: (e: ViewStateChangeEvent) => void;\n  onRotateEnd?: (e: ViewStateChangeEvent) => void;\n  onPitchStart?: (e: ViewStateChangeEvent) => void;\n  onPitch?: (e: ViewStateChangeEvent) => void;\n  onPitchEnd?: (e: ViewStateChangeEvent) => void;\n\n  onWheel?: (e: MapWheelEvent) => void;\n  onBoxZoomStart?: (e: MapBoxZoomEvent) => void;\n  onBoxZoomEnd?: (e: MapBoxZoomEvent) => void;\n  onBoxZoomCancel?: (e: MapBoxZoomEvent) => void;\n\n  onResize?: (e: MapboxEvent) => void;\n  onLoad?: (e: MapboxEvent) => void;\n  onRender?: (e: MapboxEvent) => void;\n  onIdle?: (e: MapboxEvent) => void;\n  onError?: (e: ErrorEvent) => void;\n  onRemove?: (e: MapboxEvent) => void;\n  onData?: (e: MapStyleDataEvent | MapSourceDataEvent) => void;\n  onStyleData?: (e: MapStyleDataEvent) => void;\n  onSourceData?: (e: MapSourceDataEvent) => void;\n};\n\nconst pointerEvents = {\n  mousedown: 'onMouseDown',\n  mouseup: 'onMouseUp',\n  mouseover: 'onMouseOver',\n  mousemove: 'onMouseMove',\n  click: 'onClick',\n  dblclick: 'onDblClick',\n  mouseenter: 'onMouseEnter',\n  mouseleave: 'onMouseLeave',\n  mouseout: 'onMouseOut',\n  contextmenu: 'onContextMenu',\n  touchstart: 'onTouchStart',\n  touchend: 'onTouchEnd',\n  touchmove: 'onTouchMove',\n  touchcancel: 'onTouchCancel'\n};\nconst cameraEvents = {\n  movestart: 'onMoveStart',\n  move: 'onMove',\n  moveend: 'onMoveEnd',\n  dragstart: 'onDragStart',\n  drag: 'onDrag',\n  dragend: 'onDragEnd',\n  zoomstart: 'onZoomStart',\n  zoom: 'onZoom',\n  zoomend: 'onZoomEnd',\n  rotatestart: 'onRotateStart',\n  rotate: 'onRotate',\n  rotateend: 'onRotateEnd',\n  pitchstart: 'onPitchStart',\n  pitch: 'onPitch',\n  pitchend: 'onPitchEnd'\n};\nconst otherEvents = {\n  wheel: 'onWheel',\n  boxzoomstart: 'onBoxZoomStart',\n  boxzoomend: 'onBoxZoomEnd',\n  boxzoomcancel: 'onBoxZoomCancel',\n  resize: 'onResize',\n  load: 'onLoad',\n  render: 'onRender',\n  idle: 'onIdle',\n  remove: 'onRemove',\n  data: 'onData',\n  styledata: 'onStyleData',\n  sourcedata: 'onSourceData',\n  error: 'onError'\n};\nconst settingNames: (keyof MapboxProps)[] = [\n  'minZoom',\n  'maxZoom',\n  'minPitch',\n  'maxPitch',\n  'maxBounds',\n  'projection',\n  'renderWorldCopies'\n];\nconst handlerNames: (keyof MapboxProps)[] = [\n  'scrollZoom',\n  'boxZoom',\n  'dragRotate',\n  'dragPan',\n  'keyboard',\n  'doubleClickZoom',\n  'touchZoomRotate',\n  'touchPitch'\n];\n\n/**\n * A wrapper for mapbox-gl's Map class\n */\nexport default class Mapbox {\n  private _MapClass: typeof MapboxMap;\n  // mapboxgl.Map instance. Not using type here because we are accessing\n  // private members and methods\n  private _map: any = null;\n  // User-supplied props\n  props: MapboxProps;\n\n  // Mapbox map is stateful.\n  // During method calls/user interactions, map.transform is mutated and\n  // deviate from user-supplied props.\n  // In order to control the map reactively, we shadow the transform\n  // with the one below, which reflects the view state resolved from\n  // both user-supplied props and the underlying state\n  private _renderTransform: Transform;\n\n  // Internal states\n  private _internalUpdate: boolean = false;\n  private _inRender: boolean = false;\n  private _hoveredFeatures: MapboxGeoJSONFeature[] = null;\n  private _deferredEvents: {\n    move: boolean;\n    zoom: boolean;\n    pitch: boolean;\n    rotate: boolean;\n  } = {\n    move: false,\n    zoom: false,\n    pitch: false,\n    rotate: false\n  };\n\n  constructor(MapClass: typeof MapboxMap, props: MapboxProps) {\n    this._MapClass = MapClass;\n    this.props = props;\n  }\n\n  get map(): MapboxMap {\n    return this._map as MapboxMap;\n  }\n\n  get transform(): Transform {\n    return this._renderTransform;\n  }\n\n  setProps(props: MapboxProps) {\n    const oldProps = this.props;\n    this.props = props;\n\n    const settingsChanged = this._updateSettings(props, oldProps);\n    if (settingsChanged) {\n      this._renderTransform = this._map.transform.clone();\n    }\n    const sizeChanged = this._updateSize(props);\n    const viewStateChanged = this._updateViewState(props, true);\n    this._updateStyle(props, oldProps);\n    this._updateStyleComponents(props, oldProps);\n    this._updateHandlers(props, oldProps);\n\n    // If 1) view state has changed to match props and\n    //    2) the props change is not triggered by map events,\n    // it's driven by an external state change. Redraw immediately\n    if (settingsChanged || sizeChanged || (viewStateChanged && !this._map.isMoving())) {\n      this.redraw();\n    }\n  }\n\n  initialize(container: HTMLDivElement) {\n    const {props} = this;\n    const mapOptions = {\n      ...props,\n      ...props.initialViewState,\n      accessToken: props.mapboxAccessToken || getAccessTokenFromEnv() || null,\n      container,\n      style: normalizeStyle(props.mapStyle)\n    };\n\n    const viewState = mapOptions.initialViewState || mapOptions.viewState || mapOptions;\n    Object.assign(mapOptions, {\n      center: [viewState.longitude || 0, viewState.latitude || 0],\n      zoom: viewState.zoom || 0,\n      pitch: viewState.pitch || 0,\n      bearing: viewState.bearing || 0\n    });\n\n    if (props.gl) {\n      // eslint-disable-next-line\n      const getContext = HTMLCanvasElement.prototype.getContext;\n      // Hijack canvas.getContext to return our own WebGLContext\n      // This will be called inside the mapboxgl.Map constructor\n      // @ts-expect-error\n      HTMLCanvasElement.prototype.getContext = () => {\n        // Unhijack immediately\n        HTMLCanvasElement.prototype.getContext = getContext;\n        return props.gl;\n      };\n    }\n\n    const map: any = new this._MapClass(mapOptions);\n    // Props that are not part of constructor options\n    if (viewState.padding) {\n      map.setPadding(viewState.padding);\n    }\n    this._renderTransform = map.transform.clone();\n\n    // Hack\n    // Insert code into map's render cycle\n    const renderMap = map._render;\n    map._render = (arg: number) => {\n      this._inRender = true;\n      renderMap.call(map, arg);\n      this._inRender = false;\n    };\n    const runRenderTaskQueue = map._renderTaskQueue.run;\n    map._renderTaskQueue.run = (arg: number) => {\n      runRenderTaskQueue.call(map._renderTaskQueue, arg);\n      this._onBeforeRepaint();\n    };\n    map.on('render', () => this._onAfterRepaint());\n    // Insert code into map's event pipeline\n    const fireEvent = map.fire;\n    map.fire = this._fireEvent.bind(this, fireEvent);\n\n    // add listeners\n    map.on('resize', () => {\n      this._renderTransform.resize(map.transform.width, map.transform.height);\n    });\n    map.on('styledata', () => this._updateStyleComponents(this.props, {}));\n    map.on('sourcedata', () => this._updateStyleComponents(this.props, {}));\n    for (const eventName in pointerEvents) {\n      map.on(eventName, this._onPointerEvent);\n    }\n    for (const eventName in cameraEvents) {\n      map.on(eventName, this._onCameraEvent);\n    }\n    for (const eventName in otherEvents) {\n      map.on(eventName, this._onEvent);\n    }\n    this._map = map;\n  }\n\n  destroy() {\n    this._map.remove();\n  }\n\n  // Force redraw the map now. Typically resize() and jumpTo() is reflected in the next\n  // render cycle, which is managed by Mapbox's animation loop.\n  // This removes the synchronization issue caused by requestAnimationFrame.\n  redraw() {\n    const map = this._map;\n    // map._render will throw error if style does not exist\n    // https://github.com/mapbox/mapbox-gl-js/blob/fb9fc316da14e99ff4368f3e4faa3888fb43c513\n    //   /src/ui/map.js#L1834\n    if (!this._inRender && map.style) {\n      // cancel the scheduled update\n      if (map._frame) {\n        map._frame.cancel();\n        map._frame = null;\n      }\n      // the order is important - render() may schedule another update\n      map._render();\n    }\n  }\n\n  /* Trigger map resize if size is controlled\n     @param {object} nextProps\n     @returns {bool} true if size has changed\n   */\n  _updateSize(nextProps: MapboxProps): boolean {\n    // Check if size is controlled\n    const {viewState} = nextProps;\n    if (viewState) {\n      const map = this._map;\n      if (viewState.width !== map.transform.width || viewState.height !== map.transform.height) {\n        map.resize();\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // Adapted from map.jumpTo\n  /* Update camera to match props\n     @param {object} nextProps\n     @param {bool} triggerEvents - should fire camera events\n     @returns {bool} true if anything is changed\n   */\n  _updateViewState(nextProps: MapboxProps, triggerEvents: boolean): boolean {\n    if (this._internalUpdate) {\n      return false;\n    }\n    const map = this._map;\n\n    const tr = this._renderTransform;\n    // Take a snapshot of the transform before mutation\n    const {zoom, pitch, bearing} = tr;\n    const changed = applyViewStateToTransform(tr, {\n      ...transformToViewState(map.transform),\n      ...nextProps\n    });\n\n    if (changed && triggerEvents) {\n      const deferredEvents = this._deferredEvents;\n      // Delay DOM control updates to the next render cycle\n      deferredEvents.move = true;\n      deferredEvents.zoom ||= zoom !== tr.zoom;\n      deferredEvents.rotate ||= bearing !== tr.bearing;\n      deferredEvents.pitch ||= pitch !== tr.pitch;\n    }\n\n    // Avoid manipulating the real transform when interaction/animation is ongoing\n    // as it would interfere with Mapbox's handlers\n    if (!map.isMoving()) {\n      applyViewStateToTransform(map.transform, nextProps);\n    }\n\n    return changed;\n  }\n\n  /* Update camera constraints and projection settings to match props\n     @param {object} nextProps\n     @param {object} currProps\n     @returns {bool} true if anything is changed\n   */\n  _updateSettings(nextProps: MapboxProps, currProps: MapboxProps): boolean {\n    const map = this._map;\n    let changed = false;\n    for (const propName of settingNames) {\n      if (propName in nextProps && !deepEqual(nextProps[propName], currProps[propName])) {\n        changed = true;\n        map[`set${propName[0].toUpperCase()}${propName.slice(1)}`](nextProps[propName]);\n      }\n    }\n    return changed;\n  }\n\n  /* Update map style to match props\n     @param {object} nextProps\n     @param {object} currProps\n     @returns {bool} true if style is changed\n   */\n  _updateStyle(nextProps: MapboxProps, currProps: MapboxProps): boolean {\n    if (nextProps.cursor !== currProps.cursor) {\n      this._map.getCanvas().style.cursor = nextProps.cursor;\n    }\n    if (nextProps.mapStyle !== currProps.mapStyle) {\n      const options: any = {\n        diff: nextProps.styleDiffing\n      };\n      if ('localIdeographFontFamily' in nextProps) {\n        options.localIdeographFontFamily = nextProps.localIdeographFontFamily;\n      }\n      this._map.setStyle(normalizeStyle(nextProps.mapStyle), options);\n      return true;\n    }\n    return false;\n  }\n\n  /* Update fog, light and terrain to match props\n     @param {object} nextProps\n     @param {object} currProps\n     @returns {bool} true if anything is changed\n   */\n  _updateStyleComponents(nextProps: MapboxProps, currProps: MapboxProps): boolean {\n    const map = this._map;\n    let changed = false;\n    if (map.style.loaded()) {\n      if ('light' in nextProps && !deepEqual(nextProps.light, currProps.light)) {\n        changed = true;\n        map.setLight(nextProps.light);\n      }\n      if ('fog' in nextProps && !deepEqual(nextProps.fog, currProps.fog)) {\n        changed = true;\n        map.setFog(nextProps.fog);\n      }\n      if ('terrain' in nextProps && !deepEqual(nextProps.terrain, currProps.terrain)) {\n        if (!nextProps.terrain || map.getSource(nextProps.terrain.source)) {\n          changed = true;\n          map.setTerrain(nextProps.terrain);\n        }\n      }\n    }\n    return changed;\n  }\n\n  /* Update interaction handlers to match props\n     @param {object} nextProps\n     @param {object} currProps\n     @returns {bool} true if anything is changed\n   */\n  _updateHandlers(nextProps: MapboxProps, currProps: MapboxProps): boolean {\n    const map = this._map;\n    let changed = false;\n    for (const propName of handlerNames) {\n      const newValue = nextProps[propName];\n      if (!deepEqual(newValue, currProps[propName])) {\n        changed = true;\n        if (newValue) {\n          map[propName].enable(newValue);\n        } else {\n          map[propName].disable();\n        }\n      }\n    }\n    return changed;\n  }\n\n  _onEvent = (e: MapboxEvent) => {\n    // @ts-ignore\n    const cb = this.props[otherEvents[e.type]];\n    if (cb) {\n      cb(e);\n    }\n  };\n\n  _updateHover(e: MapMouseEvent) {\n    const {props} = this;\n    const shouldTrackHoveredFeatures =\n      props.interactiveLayerIds && (props.onMouseMove || props.onMouseEnter || props.onMouseLeave);\n\n    if (shouldTrackHoveredFeatures) {\n      const eventType = e.type;\n      const wasHovering = this._hoveredFeatures?.length > 0;\n      let features;\n      if (eventType === 'mousemove') {\n        try {\n          features = this._map.queryRenderedFeatures(e.point, {\n            layers: props.interactiveLayerIds\n          });\n        } catch {\n          features = [];\n        }\n      } else {\n        features = [];\n      }\n      const isHovering = features.length > 0;\n\n      if (!isHovering && wasHovering) {\n        e.type = 'mouseleave';\n        this._onPointerEvent(e);\n      }\n      this._hoveredFeatures = features;\n      if (isHovering && !wasHovering) {\n        e.type = 'mouseenter';\n        this._onPointerEvent(e);\n      }\n      e.type = eventType;\n    } else {\n      this._hoveredFeatures = null;\n    }\n  }\n\n  _onPointerEvent = (e: MapLayerMouseEvent | MapLayerTouchEvent) => {\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      this._updateHover(e);\n    }\n\n    // @ts-ignore\n    const cb = this.props[pointerEvents[e.type]];\n    if (cb) {\n      if (this.props.interactiveLayerIds && e.type !== 'mouseover' && e.type !== 'mouseout') {\n        const features =\n          this._hoveredFeatures ||\n          this._map.queryRenderedFeatures(e.point, {\n            layers: this.props.interactiveLayerIds\n          });\n        if (!features.length) {\n          return;\n        }\n        e.features = features;\n      }\n      cb(e);\n      delete e.features;\n    }\n  };\n\n  _onCameraEvent = (e: ViewStateChangeEvent) => {\n    if (!this._internalUpdate) {\n      // @ts-ignore\n      const cb = this.props[cameraEvents[e.type]];\n      if (cb) {\n        cb(e);\n      }\n    }\n    if (e.type in this._deferredEvents) {\n      this._deferredEvents[e.type] = false;\n    }\n  };\n\n  _fireEvent(baseFire: Function, event: string | MapboxEvent, properties?: object) {\n    const map = this._map;\n    const tr = map.transform;\n\n    const eventType = typeof event === 'string' ? event : event.type;\n    if (eventType === 'move') {\n      this._updateViewState(this.props, false);\n    }\n    if (eventType in cameraEvents) {\n      if (typeof event === 'object') {\n        (event as ViewStateChangeEvent).viewState = transformToViewState(tr);\n      }\n      if (this._map.isMoving()) {\n        // Replace map.transform with ours during the callbacks\n        map.transform = this._renderTransform;\n        baseFire.call(map, event, properties);\n        map.transform = tr;\n\n        return map;\n      }\n    }\n    baseFire.call(map, event, properties);\n\n    return map;\n  }\n\n  // All camera manipulations are complete, ready to repaint\n  _onBeforeRepaint() {\n    const map = this._map;\n\n    // If there are camera changes driven by props, invoke camera events so that DOM controls are synced\n    this._internalUpdate = true;\n    for (const eventType in this._deferredEvents) {\n      if (this._deferredEvents[eventType]) {\n        map.fire(eventType);\n      }\n    }\n    this._internalUpdate = false;\n\n    const tr = this._map.transform;\n    // Make sure camera matches the current props\n    this._map.transform = this._renderTransform;\n\n    this._onAfterRepaint = () => {\n      // Restores camera state before render/load events are fired\n      this._map.transform = tr;\n    };\n  }\n\n  _onAfterRepaint: () => void;\n}\n\n/**\n * Access token can be provided via one of:\n *   mapboxAccessToken prop\n *   access_token query parameter\n *   MapboxAccessToken environment variable\n *   REACT_APP_MAPBOX_ACCESS_TOKEN environment variable\n * @returns access token\n */\nfunction getAccessTokenFromEnv(): string {\n  let accessToken = null;\n\n  /* global location, process */\n  if (typeof location !== 'undefined') {\n    const match = /access_token=([^&\\/]*)/.exec(location.search);\n    accessToken = match && match[1];\n  }\n\n  // Note: This depends on bundler plugins (e.g. webpack) importing environment correctly\n  try {\n    accessToken = accessToken || process.env.MapboxAccessToken;\n  } catch {\n    // ignore\n  }\n\n  try {\n    accessToken = accessToken || process.env.REACT_APP_MAPBOX_ACCESS_TOKEN;\n  } catch {\n    // ignore\n  }\n\n  return accessToken;\n}\n","import type {MapboxMap, LngLatLike, PointLike} from '../types';\nimport type Mapbox from './mapbox';\n\n/** These methods may break the react binding if called directly */\nconst skipMethods = [\n  'setMaxBounds',\n  'setMinZoom',\n  'setMaxZoom',\n  'setMinPitch',\n  'setMaxPitch',\n  'setRenderWorldCopies',\n  'setProjection',\n  'setStyle',\n  'addSource',\n  'removeSource',\n  'addLayer',\n  'removeLayer',\n  'setLayerZoomRange',\n  'setFilter',\n  'setPaintProperty',\n  'setLayoutProperty',\n  'setLight',\n  'setTerrain',\n  'setFog',\n  'remove'\n] as const;\n\nexport type MapRef = {\n  getMap(): MapboxMap;\n} & Omit<MapboxMap, typeof skipMethods[number]>;\n\nexport default function createRef(mapInstance: Mapbox, mapLib: any): MapRef {\n  if (!mapInstance) {\n    return null;\n  }\n\n  const map: MapboxMap = mapInstance.map;\n  const result: any = {\n    getMap: () => map,\n\n    // Overwrite getters to use our shadow transform\n    getCenter: () => mapInstance.transform.center,\n    getZoom: () => mapInstance.transform.zoom,\n    getBearing: () => mapInstance.transform.bearing,\n    getPitch: () => mapInstance.transform.pitch,\n    getPadding: () => mapInstance.transform.padding,\n    getBounds: () => mapInstance.transform.getBounds(),\n    project: (lnglat: LngLatLike) => {\n      return mapInstance.transform.locationPoint(mapLib.LngLat.convert(lnglat));\n    },\n    unproject: (point: PointLike) => {\n      return mapInstance.transform.pointLocation(mapLib.Point.convert(point));\n    }\n  };\n\n  for (const key of getMethodNames(map)) {\n    // @ts-expect-error\n    if (!(key in result) && !skipMethods.includes(key)) {\n      result[key] = map[key].bind(map);\n    }\n  }\n\n  return result;\n}\n\nfunction getMethodNames(obj) {\n  const result = new Set<string>();\n\n  let proto = obj;\n  while (proto) {\n    for (const key of Object.getOwnPropertyNames(proto)) {\n      if (\n        key[0] !== '_' &&\n        typeof obj[key] === 'function' &&\n        key !== 'fire' &&\n        key !== 'setEventedParent'\n      ) {\n        result.add(key);\n      }\n    }\n    proto = Object.getPrototypeOf(proto);\n  }\n  return Array.from(result);\n}\n","// From https://github.com/streamich/react-use/blob/master/src/useIsomorphicLayoutEffect.ts\n// useLayoutEffect but does not trigger warning in server-side rendering\nimport {useEffect, useLayoutEffect} from 'react';\n\nconst useIsomorphicLayoutEffect = typeof document !== 'undefined' ? useLayoutEffect : useEffect;\n\nexport default useIsomorphicLayoutEffect;\n","export type GlobalSettings = {\n  /** The map's default API URL for requesting tiles, styles, sprites, and glyphs. */\n  baseApiUrl?: string;\n  /** The maximum number of images (raster tiles, sprites, icons) to load in parallel.\n   * @default 16\n   */\n  maxParallelImageRequests?: number;\n  /** The map's RTL text plugin. Necessary for supporting the Arabic and Hebrew languages, which are written right-to-left.  */\n  RTLTextPlugin?: string;\n  /** Provides an interface for external module bundlers such as Webpack or Rollup to package mapbox-gl's WebWorker into a separate class and integrate it with the library.\nTakes precedence over `workerUrl`. */\n  workerClass?: any;\n  /** The number of web workers instantiated on a page with mapbox-gl maps.\n   * @default 2\n   */\n  workerCount?: number;\n  /** Provides an interface for loading mapbox-gl's WebWorker bundle from a self-hosted URL.\n   * This is useful if your site needs to operate in a strict CSP (Content Security Policy) environment\n   * wherein you are not allowed to load JavaScript code from a Blob URL, which is default behavior. */\n  workerUrl?: string;\n};\n\nconst globalSettings = [\n  'baseApiUrl',\n  'maxParallelImageRequests',\n  'workerClass',\n  'workerCount',\n  'workerUrl'\n] as const;\n\nexport default function setGlobals(mapLib: any, props: GlobalSettings) {\n  for (const key of globalSettings) {\n    if (key in props) {\n      mapLib[key] = props[key];\n    }\n  }\n\n  if (\n    props.RTLTextPlugin &&\n    mapLib.getRTLTextPluginStatus &&\n    mapLib.getRTLTextPluginStatus() === 'unavailable'\n  ) {\n    mapLib.setRTLTextPlugin(\n      props.RTLTextPlugin,\n      (error?: Error) => {\n        if (error) {\n          // eslint-disable-next-line\n          console.error(error);\n        }\n      },\n      false\n    );\n  }\n}\n","import * as React from 'react';\nimport {\n  useState,\n  useRef,\n  useEffect,\n  useContext,\n  useMemo,\n  forwardRef,\n  useImperativeHandle\n} from 'react';\n\nimport {MountedMapsContext} from './use-map';\nimport Mapbox, {MapboxProps} from '../mapbox/mapbox';\nimport createRef, {MapRef} from '../mapbox/create-ref';\n\nimport type {CSSProperties} from 'react';\nimport type {MapboxMap} from '../types';\nimport useIsomorphicLayoutEffect from '../utils/use-isomorphic-layout-effect';\nimport setGlobals, {GlobalSettings} from '../utils/set-globals';\n\nexport type MapContextValue = {\n  mapLib: any;\n  map: MapboxMap;\n};\n\nexport const MapContext = React.createContext<MapContextValue>(null);\n\nexport type MapProps = MapboxProps &\n  GlobalSettings & {\n    mapLib?: any;\n    /** Map container id */\n    id?: string;\n    /** Map container CSS style */\n    style?: CSSProperties;\n    children?: any;\n  };\n\nconst defaultProps: MapProps = {\n  // Constraints\n  minZoom: 0,\n  maxZoom: 22,\n  minPitch: 0,\n  maxPitch: 60,\n\n  // Interaction handlers\n  scrollZoom: true,\n  boxZoom: true,\n  dragRotate: true,\n  dragPan: true,\n  keyboard: true,\n  doubleClickZoom: true,\n  touchZoomRotate: true,\n  touchPitch: true,\n\n  // Style\n  mapStyle: {version: 8, sources: {}, layers: []},\n  styleDiffing: true,\n  projection: 'mercator',\n  renderWorldCopies: true,\n\n  // Callbacks\n  onError: e => console.error(e.error), // eslint-disable-line\n\n  // Globals\n  RTLTextPlugin:\n    'https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-rtl-text/v0.2.3/mapbox-gl-rtl-text.js'\n};\n\nconst Map = forwardRef<MapRef, MapProps>((props, ref) => {\n  const mountedMapsContext = useContext(MountedMapsContext);\n  const [mapInstance, setMapInstance] = useState<Mapbox>(null);\n  const containerRef = useRef();\n\n  const {current: contextValue} = useRef<MapContextValue>({mapLib: null, map: null});\n\n  useEffect(() => {\n    const mapLib = props.mapLib;\n    let isMounted = true;\n    let mapbox;\n\n    Promise.resolve(mapLib || import('mapbox-gl'))\n      .then(mapboxgl => {\n        if (!isMounted) {\n          return;\n        }\n\n        if (!mapboxgl.Map) {\n          // commonjs style\n          mapboxgl = mapboxgl.default;\n        }\n        if (!mapboxgl || !mapboxgl.Map) {\n          throw new Error('Invalid mapLib');\n        }\n\n        if (mapboxgl.supported(props)) {\n          setGlobals(mapboxgl, props);\n          mapbox = new Mapbox(mapboxgl.Map, props);\n          mapbox.initialize(containerRef.current);\n          contextValue.map = mapbox.map;\n          contextValue.mapLib = mapboxgl;\n\n          setMapInstance(mapbox);\n          mountedMapsContext?.onMapMount(createRef(mapbox, mapboxgl), props.id);\n        } else {\n          throw new Error('Map is not supported by this browser');\n        }\n      })\n      .catch(error => {\n        props.onError({\n          type: 'error',\n          target: null,\n          originalEvent: null,\n          error\n        });\n      });\n\n    return () => {\n      isMounted = false;\n      if (mapbox) {\n        mountedMapsContext?.onMapUnmount(props.id);\n        mapbox.destroy();\n      }\n    };\n  }, []);\n\n  useIsomorphicLayoutEffect(() => {\n    if (mapInstance) {\n      mapInstance.setProps(props);\n    }\n  });\n\n  useImperativeHandle(ref, () => createRef(mapInstance, contextValue.mapLib), [mapInstance]);\n\n  const style: CSSProperties = useMemo(\n    () => ({\n      position: 'relative',\n      width: '100%',\n      height: '100%',\n      ...props.style\n    }),\n    [props.style]\n  );\n\n  return (\n    <div id={props.id} ref={containerRef} style={style}>\n      {mapInstance && (\n        <MapContext.Provider value={contextValue}>{props.children}</MapContext.Provider>\n      )}\n    </div>\n  );\n});\n\nMap.displayName = 'Map';\nMap.defaultProps = defaultProps;\n\nexport default Map;\n","import * as React from 'react';\n// This is a simplified version of\n// https://github.com/facebook/react/blob/4131af3e4bf52f3a003537ec95a1655147c81270/src/renderers/dom/shared/CSSPropertyOperations.js#L62\nconst unitlessNumber = /box|flex|grid|column|lineHeight|fontWeight|opacity|order|tabSize|zIndex/;\n\nexport function applyReactStyle(element: HTMLElement, styles: React.CSSProperties) {\n  if (!element || !styles) {\n    return;\n  }\n  const style = element.style;\n\n  for (const key in styles) {\n    const value = styles[key];\n    if (Number.isFinite(value) && !unitlessNumber.test(key)) {\n      style[key] = `${value}px`;\n    } else {\n      style[key] = value;\n    }\n  }\n}\n","/* global document */\nimport * as React from 'react';\nimport {createPortal} from 'react-dom';\nimport {useEffect, useMemo, useRef, useContext} from 'react';\nimport {applyReactStyle} from '../utils/apply-react-style';\n\nimport type {MarkerDragEvent, MapboxPopup, PointLike, Anchor, Alignment} from '../types';\n\nimport {MapContext} from './map';\nimport {arePointsEqual} from '../utils/deep-equal';\n\nexport type MarkerProps = {\n  /** Longitude of the anchor location */\n  longitude: number;\n  /** Latitude of the anchor location */\n  latitude: number;\n  /** A string indicating the part of the Marker that should be positioned closest to the coordinate set via Marker.setLngLat.\n   * Options are `'center'`, `'top'`, `'bottom'`, `'left'`, `'right'`, `'top-left'`, `'top-right'`, `'bottom-left'`, and `'bottom-right'`.\n   * @default \"center\"\n   */\n  anchor?: Anchor;\n  /**\n   * The max number of pixels a user can shift the mouse pointer during a click on the marker for it to be considered a valid click\n   * (as opposed to a marker drag). The default (0) is to inherit map's clickTolerance.\n   */\n  clickTolerance?: number;\n  /** The color to use for the default marker if options.element is not provided.\n   * @default \"#3FB1CE\"\n   */\n  color?: string;\n  /** A boolean indicating whether or not a marker is able to be dragged to a new position on the map.\n   * @default false\n   */\n  draggable?: boolean;\n  /** The offset in pixels as a PointLike object to apply relative to the element's center. Negatives indicate left and up. */\n  offset?: PointLike;\n  /** `map` aligns the `Marker` to the plane of the map.\n   * `viewport` aligns the `Marker` to the plane of the viewport.\n   * `auto` automatically matches the value of `rotationAlignment`.\n   * @default \"auto\"\n   */\n  pitchAlignment?: Alignment;\n  /** The rotation angle of the marker in degrees, relative to its `rotationAlignment` setting. A positive value will rotate the marker clockwise.\n   * @default 0\n   */\n  rotation?: number;\n  /** `map` aligns the `Marker`'s rotation relative to the map, maintaining a bearing as the map rotates.\n   * `viewport` aligns the `Marker`'s rotation relative to the viewport, agnostic to map rotations.\n   * `auto` is equivalent to `viewport`.\n   * @default \"auto\"\n   */\n  rotationAlignment?: Alignment;\n  /** The scale to use for the default marker if options.element is not provided.\n   * The default scale (1) corresponds to a height of `41px` and a width of `27px`.\n   * @default 1\n   */\n  scale?: number;\n  /** A Popup instance that is bound to the marker */\n  popup?: MapboxPopup;\n  /** CSS style override, applied to the control's container */\n  style?: React.CSSProperties;\n  onDragStart?: (e: MarkerDragEvent) => void;\n  onDrag?: (e: MarkerDragEvent) => void;\n  onDragEnd?: (e: MarkerDragEvent) => void;\n  children?: React.ReactNode;\n};\n\nconst defaultProps: Partial<MarkerProps> = {\n  draggable: false,\n  popup: null,\n  rotation: 0,\n  rotationAlignment: 'auto',\n  pitchAlignment: 'auto'\n};\n\nfunction Marker(props: MarkerProps) {\n  const {map, mapLib} = useContext(MapContext);\n  const marker = useMemo(() => {\n    let hasChildren = false;\n    React.Children.forEach(props.children, el => {\n      if (el) {\n        hasChildren = true;\n      }\n    });\n    const options = {\n      ...props,\n      element: hasChildren ? document.createElement('div') : null\n    };\n\n    return new mapLib.Marker(options).setLngLat([props.longitude, props.latitude]);\n  }, []);\n  const thisRef = useRef({props});\n  thisRef.current.props = props;\n\n  useEffect(() => {\n    marker.on('dragstart', e => {\n      const evt = e as MarkerDragEvent;\n      evt.lngLat = marker.getLngLat();\n      thisRef.current.props.onDragStart?.(evt);\n    });\n    marker.on('drag', e => {\n      const evt = e as MarkerDragEvent;\n      evt.lngLat = marker.getLngLat();\n      thisRef.current.props.onDrag?.(evt);\n    });\n    marker.on('dragend', e => {\n      const evt = e as MarkerDragEvent;\n      evt.lngLat = marker.getLngLat();\n      thisRef.current.props.onDragEnd?.(evt);\n    });\n    marker.addTo(map);\n\n    return () => {\n      marker.remove();\n    };\n  }, []);\n\n  useEffect(() => {\n    applyReactStyle(marker.getElement(), props.style);\n  }, [props.style]);\n\n  if (marker.getLngLat().lng !== props.longitude || marker.getLngLat().lat !== props.latitude) {\n    marker.setLngLat([props.longitude, props.latitude]);\n  }\n  if (props.offset && !arePointsEqual(marker.getOffset(), props.offset)) {\n    marker.setOffset(props.offset);\n  }\n  if (marker.isDraggable() !== props.draggable) {\n    marker.setDraggable(props.draggable);\n  }\n  if (marker.getRotation() !== props.rotation) {\n    marker.setRotation(props.rotation);\n  }\n  if (marker.getRotationAlignment() !== props.rotationAlignment) {\n    marker.setRotationAlignment(props.rotationAlignment);\n  }\n  if (marker.getPitchAlignment() !== props.pitchAlignment) {\n    marker.setPitchAlignment(props.pitchAlignment);\n  }\n  if (marker.getPopup() !== props.popup) {\n    marker.setPopup(props.popup);\n  }\n\n  return createPortal(props.children, marker.getElement());\n}\n\nMarker.defaultProps = defaultProps;\n\n// @ts-ignore\nexport default React.memo(Marker);\n","/* global document */\nimport * as React from 'react';\nimport {createPortal} from 'react-dom';\nimport {useEffect, useMemo, useRef, useContext} from 'react';\nimport {applyReactStyle} from '../utils/apply-react-style';\n\nimport type {PopupEvent, Anchor, PointLike} from '../types';\n\nimport {MapContext} from './map';\nimport {deepEqual} from '../utils/deep-equal';\n\nexport type PopupProps = {\n  /** Longitude of the anchor location */\n  longitude: number;\n  /** Latitude of the anchor location */\n  latitude: number;\n  /**\n   * A string indicating the part of the popup that should be positioned closest to the coordinate.\n   * Options are `'center'`, `'top'`, `'bottom'`, `'left'`, `'right'`, `'top-left'`, `'top-right'`, `'bottom-left'`,\n   * and `'bottom-right'`. If unset, the anchor will be dynamically set to ensure the popup falls within the map\n   * container with a preference for `'bottom'`.\n   */\n  anchor?: Anchor;\n  /**\n   * If `true`, a close button will appear in the top right corner of the popup.\n   * @default true\n   */\n  closeButton?: boolean;\n  /**\n   * If `true`, the popup will close when the map is clicked.\n   * @default true\n   */\n  closeOnClick?: boolean;\n  /**\n   * If `true`, the popup will closed when the map moves.\n   * @default false\n   */\n  closeOnMove?: boolean;\n  /**\n   * If `true`, the popup will try to focus the first focusable element inside the popup.\n   * @default true\n   */\n  focusAfterOpen?: boolean;\n  /**\n   * A pixel offset applied to the popup's location specified as:\n   * - a single number specifying a distance from the popup's location\n   * - a PointLike specifying a constant offset\n   * - an object of Points specifing an offset for each anchor position.\n   */\n  offset?: number | PointLike | Partial<{[anchor in Anchor]: PointLike}>;\n  /** Space-separated CSS class names to add to popup container. */\n  className?: string;\n  /**\n   * A string that sets the CSS property of the popup's maximum width (for example, `'300px'`).\n   * To ensure the popup resizes to fit its content, set this property to `'none'`\n   * @default \"240px\"\n   */\n  maxWidth?: string;\n  /** CSS style override, applied to the control's container */\n  style?: React.CSSProperties;\n\n  onOpen?: (e: PopupEvent) => void;\n  onClose?: (e: PopupEvent) => void;\n  children?: React.ReactNode;\n};\n\n// Adapted from https://github.com/mapbox/mapbox-gl-js/blob/v1.13.0/src/ui/popup.js\nfunction getClassList(className: string) {\n  return new Set(className ? className.trim().split(/\\s+/) : []);\n}\n\nfunction Popup(props: PopupProps) {\n  const {map, mapLib} = useContext(MapContext);\n  const container = useMemo(() => {\n    return document.createElement('div');\n  }, []);\n  const popup = useMemo(() => {\n    const options = {...props};\n    return new mapLib.Popup(options).setLngLat([props.longitude, props.latitude]);\n  }, []);\n  const thisRef = useRef({props});\n  thisRef.current.props = props;\n\n  useEffect(() => {\n    popup.on('open', e => {\n      thisRef.current.props.onOpen?.(e as PopupEvent);\n    });\n    popup.on('close', e => {\n      thisRef.current.props.onClose?.(e as PopupEvent);\n    });\n    popup.setDOMContent(container).addTo(map);\n\n    return () => {\n      popup.remove();\n    };\n  }, []);\n\n  useEffect(() => {\n    applyReactStyle(popup.getElement(), props.style);\n  }, [props.style]);\n\n  if (popup.isOpen()) {\n    if (popup.getLngLat().lng !== props.longitude || popup.getLngLat().lat !== props.latitude) {\n      popup.setLngLat([props.longitude, props.latitude]);\n    }\n    // @ts-ignore\n    if (props.offset && !deepEqual(popup.options.offset, props.offset)) {\n      popup.setOffset(props.offset);\n    }\n    // @ts-ignore\n    if (popup.options.anchor !== props.anchor || popup.options.maxWidth !== props.maxWidth) {\n      // @ts-ignore\n      popup.options.anchor = props.anchor;\n      popup.setMaxWidth(props.maxWidth);\n    }\n    // @ts-ignore\n    if (popup.options.className !== props.className) {\n      // @ts-ignore\n      const prevClassList = getClassList(popup.options.className);\n      const nextClassList = getClassList(props.className);\n\n      for (const c of prevClassList) {\n        if (!nextClassList.has(c)) {\n          popup.removeClassName(c);\n        }\n      }\n      for (const c of nextClassList) {\n        if (!prevClassList.has(c)) {\n          popup.addClassName(c);\n        }\n      }\n      // @ts-ignore\n      popup.options.className = props.className;\n    }\n  }\n\n  return createPortal(props.children, container);\n}\n\n// @ts-ignore\nexport default React.memo(Popup);\n","import {useContext, useMemo, useEffect} from 'react';\nimport type {IControl, ControlPosition} from '../types';\nimport {MapContext} from './map';\nimport type {MapContextValue} from './map';\n\ntype ControlOptions = {\n  position?: ControlPosition;\n};\n\nexport default function useControl(\n  onCreate: (context: MapContextValue) => IControl,\n  onRemove?: ((context: MapContextValue) => void) | ControlOptions,\n  opts?: ControlOptions\n) {\n  const context = useContext(MapContext);\n  const ctrl = useMemo(() => onCreate(context), []);\n\n  useEffect(() => {\n    const {map} = context;\n    if (!map.hasControl(ctrl)) {\n      map.addControl(ctrl, (opts || (onRemove as ControlOptions))?.position);\n    }\n\n    return () => {\n      if (typeof onRemove === 'function') {\n        onRemove(context);\n      }\n      // Map might have been removed (parent effects are destroyed before child ones)\n      if (map.hasControl(ctrl)) {\n        map.removeControl(ctrl);\n      }\n    };\n  }, []);\n\n  return ctrl;\n}\n","import * as React from 'react';\nimport {useEffect} from 'react';\nimport {applyReactStyle} from '../utils/apply-react-style';\nimport useControl from './use-control';\n\nimport type {ControlPosition, MapboxAttributionControl} from '../types';\n\nexport type AttributionControlProps = {\n  /**\n   * If true , force a compact attribution that shows the full attribution on mouse hover.\n   * If false , force the full attribution control. The default is a responsive attribution\n   * that collapses when the map is less than 640 pixels wide.  */\n  compact?: boolean;\n  /** String or strings to show in addition to any other attributions. */\n  customAttribution?: string | string[];\n  /** Placement of the control relative to the map. */\n  position?: ControlPosition;\n  /** CSS style override, applied to the control's container */\n  style?: React.CSSProperties;\n};\n\nfunction AttributionControl(props: AttributionControlProps): null {\n  const ctrl = useControl(({mapLib}) => new mapLib.AttributionControl(props), {\n    position: props.position\n  }) as MapboxAttributionControl;\n\n  useEffect(() => {\n    // @ts-ignore\n    applyReactStyle(ctrl._container, props.style);\n  }, [props.style]);\n\n  return null;\n}\n\nexport default React.memo(AttributionControl);\n","/* global document */\nimport * as React from 'react';\nimport {useEffect} from 'react';\nimport {applyReactStyle} from '../utils/apply-react-style';\nimport useControl from './use-control';\n\nimport type {ControlPosition, MapboxFullscreenControl} from '../types';\n\nexport type FullscreenControlProps = {\n  /** Id of the DOM element which should be made full screen. By default, the map container\n   * element will be made full screen. */\n  containerId?: string;\n  /** Placement of the control relative to the map. */\n  position?: ControlPosition;\n  /** CSS style override, applied to the control's container */\n  style?: React.CSSProperties;\n};\n\nfunction FullscreenControl(props: FullscreenControlProps): null {\n  const ctrl = useControl(\n    ({mapLib}) =>\n      new mapLib.FullscreenControl({\n        container: props.containerId && document.getElementById(props.containerId)\n      }),\n    {position: props.position}\n  ) as MapboxFullscreenControl;\n\n  useEffect(() => {\n    // @ts-ignore\n    applyReactStyle(ctrl._controlContainer, props.style);\n  }, [props.style]);\n\n  return null;\n}\n\nexport default React.memo(FullscreenControl);\n","import * as React from 'react';\nimport {forwardRef, useImperativeHandle, useRef, useEffect} from 'react';\nimport {applyReactStyle} from '../utils/apply-react-style';\nimport useControl from './use-control';\n\nimport type {\n  ControlPosition,\n  PositionOptions,\n  FitBoundsOptions,\n  MapboxGeolocateControl,\n  GeolocateEvent,\n  GeolocateResultEvent,\n  GeolocateErrorEvent\n} from '../types';\n\nexport type GeolocateControlRef = {\n  /** Triggers a geolocate event */\n  trigger: () => boolean;\n};\n\nexport type GeolocateControlProps = {\n  /**\n   * A Geolocation API PositionOptions object.\n   * @default {enableHighAccuracy:false,timeout:6000}\n   */\n  positionOptions?: PositionOptions;\n  /** A Map#fitBounds options object to use when the map is panned and zoomed to the user's location.\n   * @default {maxZoom:15}\n   */\n  fitBoundsOptions?: FitBoundsOptions;\n  /** If true the GeolocateControl becomes a toggle button and when active the map will receive\n   * updates to the user's location as it changes. Default false.\n   * @default false\n   */\n  trackUserLocation?: boolean;\n  /** Draw a transparent circle will be drawn around the user location indicating the accuracy\n   * (95% confidence level) of the user's location. Set to false to disable.\n   * This only has effect if `showUserLocation` is true.\n   * @default true\n   */\n  showAccuracyCircle?: boolean;\n  /**\n   * Show a dot on the map at the user's location. Set to false to disable.\n   * @default true\n   */\n  showUserLocation?: boolean;\n  /** If true an arrow will be drawn next to the user location dot indicating the device's heading.\n   * This only has affect when `trackUserLocation` is true. Default false.\n   * @default false\n   */\n  showUserHeading?: boolean;\n  /** Placement of the control relative to the map. */\n  position?: ControlPosition;\n  /** CSS style override, applied to the control's container */\n  style?: React.CSSProperties;\n\n  /** Called on each Geolocation API position update that returned as success. */\n  onGeolocate?: (e: GeolocateResultEvent) => void;\n  /** Called on each Geolocation API position update that returned as an error. */\n  onError?: (e: GeolocateErrorEvent) => void;\n  /** Called on each Geolocation API position update that returned as success but user position\n   * is out of map `maxBounds`. */\n  onOutOfMaxBounds?: (e: GeolocateResultEvent) => void;\n  /** Called when the GeolocateControl changes to the active lock state. */\n  onTrackUserLocationStart?: (e: GeolocateEvent) => void;\n  /** Called when the GeolocateControl changes to the background state. */\n  onTrackUserLocationEnd?: (e: GeolocateEvent) => void;\n};\n\nconst GeolocateControl = forwardRef<GeolocateControlRef, GeolocateControlProps>((props, ref) => {\n  const thisRef = useRef({props});\n\n  const ctrl = useControl(\n    ({mapLib}) => {\n      const gc = new mapLib.GeolocateControl(props);\n\n      gc.on('geolocate', e => {\n        thisRef.current.props.onGeolocate?.(e as GeolocateResultEvent);\n      });\n      gc.on('error', e => {\n        thisRef.current.props.onError?.(e as GeolocateErrorEvent);\n      });\n      gc.on('outofmaxbounds', e => {\n        thisRef.current.props.onOutOfMaxBounds?.(e as GeolocateResultEvent);\n      });\n      gc.on('trackuserlocationstart', e => {\n        thisRef.current.props.onTrackUserLocationStart?.(e as GeolocateEvent);\n      });\n      gc.on('trackuserlocationend', e => {\n        thisRef.current.props.onTrackUserLocationEnd?.(e as GeolocateEvent);\n      });\n\n      return gc;\n    },\n    {position: props.position}\n  ) as MapboxGeolocateControl;\n\n  thisRef.current.props = props;\n\n  useImperativeHandle(\n    ref,\n    () => ({\n      trigger: () => ctrl.trigger()\n    }),\n    []\n  );\n\n  useEffect(() => {\n    // @ts-ignore\n    applyReactStyle(ctrl._container, props.style);\n  }, [props.style]);\n\n  return null;\n});\n\nGeolocateControl.displayName = 'GeolocateControl';\n\nexport default React.memo(GeolocateControl);\n","import * as React from 'react';\nimport {useEffect} from 'react';\nimport {applyReactStyle} from '../utils/apply-react-style';\nimport useControl from './use-control';\n\nimport type {ControlPosition, MapboxNavigationControl} from '../types';\n\nexport type NavigationControlProps = {\n  /** If true the compass button is included.\n   * @default true\n   */\n  showCompass?: boolean;\n  /** If true the zoom-in and zoom-out buttons are included.\n   * @default true\n   */\n  showZoom?: boolean;\n  /** If true the pitch is visualized by rotating X-axis of compass.\n   * @default false\n   */\n  visualizePitch?: boolean;\n  /** Placement of the control relative to the map. */\n  position?: ControlPosition;\n  /** CSS style override, applied to the control's container */\n  style?: React.CSSProperties;\n};\n\nfunction NavigationControl(props: NavigationControlProps): null {\n  const ctrl = useControl(({mapLib}) => new mapLib.NavigationControl(props), {\n    position: props.position\n  }) as MapboxNavigationControl;\n\n  useEffect(() => {\n    // @ts-ignore\n    applyReactStyle(ctrl._container, props.style);\n  }, [props.style]);\n\n  return null;\n}\n\nexport default React.memo(NavigationControl);\n","import * as React from 'react';\nimport {useEffect} from 'react';\nimport {applyReactStyle} from '../utils/apply-react-style';\nimport useControl from './use-control';\n\nimport type {ControlPosition, MapboxScaleControl} from '../types';\n\nexport type ScaleControlProps = {\n  /** Unit of the distance.\n   * @default \"metric\"\n   */\n  unit?: 'imperial' | 'metric' | 'nautical';\n  /** The maximum length of the scale control in pixels.\n   * @default 100\n   */\n  maxWidth?: number;\n  /** Placement of the control relative to the map. */\n  position?: ControlPosition;\n  /** CSS style override, applied to the control's container */\n  style?: React.CSSProperties;\n};\n\nconst defaultProps: ScaleControlProps = {\n  unit: 'metric',\n  maxWidth: 100\n};\n\nfunction ScaleControl(props: ScaleControlProps): null {\n  const ctrl = useControl(({mapLib}) => new mapLib.ScaleControl(props), {\n    position: props.position\n  }) as MapboxScaleControl;\n\n  // @ts-ignore\n  if (ctrl.options.unit !== props.unit || ctrl.options.maxWidth !== props.maxWidth) {\n    // @ts-ignore\n    ctrl.options.maxWidth = props.maxWidth;\n    // This method will trigger an update\n    ctrl.setUnit(props.unit);\n  }\n\n  useEffect(() => {\n    // @ts-ignore\n    applyReactStyle(ctrl._container, props.style);\n  }, [props.style]);\n\n  return null;\n}\n\nScaleControl.defaultProps = defaultProps;\n\nexport default React.memo(ScaleControl);\n","export default function assert(condition: any, message: string) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n","import * as React from 'react';\nimport {useContext, useEffect, useMemo, useState, useRef} from 'react';\nimport {cloneElement} from 'react';\nimport {MapContext} from './map';\nimport assert from '../utils/assert';\nimport {deepEqual} from '../utils/deep-equal';\n\nimport type {\n  MapboxMap,\n  AnySourceData,\n  GeoJSONSource,\n  ImageSource,\n  VideoSource,\n  AnySourceImpl\n} from '../types';\n\nexport type SourceProps = AnySourceData & {\n  id?: string;\n  children?: any;\n};\n\nlet sourceCounter = 0;\n\nfunction createSource(map: MapboxMap, id: string, props: SourceProps) {\n  // @ts-ignore\n  if (map.style && map.style._loaded) {\n    const options = {...props};\n    delete options.id;\n    delete options.children;\n    // @ts-ignore\n    map.addSource(id, options);\n    return map.getSource(id);\n  }\n  return null;\n}\n\n/* eslint-disable complexity */\nfunction updateSource(source: AnySourceImpl, props: SourceProps, prevProps: SourceProps) {\n  assert(props.id === prevProps.id, 'source id changed');\n  assert(props.type === prevProps.type, 'source type changed');\n\n  let changedKey = '';\n  let changedKeyCount = 0;\n\n  for (const key in props) {\n    if (key !== 'children' && key !== 'id' && !deepEqual(prevProps[key], props[key])) {\n      changedKey = key;\n      changedKeyCount++;\n    }\n  }\n\n  if (!changedKeyCount) {\n    return;\n  }\n\n  const type = props.type;\n\n  if (type === 'geojson') {\n    (source as GeoJSONSource).setData(props.data);\n  } else if (type === 'image') {\n    (source as ImageSource).updateImage({url: props.url, coordinates: props.coordinates});\n  } else if (\n    (type === 'canvas' || type === 'video') &&\n    changedKeyCount === 1 &&\n    changedKey === 'coordinates'\n  ) {\n    (source as VideoSource).setCoordinates(props.coordinates);\n  } else if (type === 'vector' && 'setUrl' in source) {\n    // Added in 1.12.0:\n    // vectorTileSource.setTiles\n    // vectorTileSource.setUrl\n    switch (changedKey) {\n      case 'url':\n        source.setUrl(props.url);\n        break;\n      case 'tiles':\n        source.setTiles(props.tiles);\n        break;\n      default:\n    }\n  } else {\n    // eslint-disable-next-line\n    console.warn(`Unable to update <Source> prop: ${changedKey}`);\n  }\n}\n/* eslint-enable complexity */\n\nfunction Source(props: SourceProps) {\n  const {map} = useContext(MapContext);\n  const propsRef = useRef(props);\n  const [, setStyleLoaded] = useState(0);\n\n  const id = useMemo(() => props.id || `jsx-source-${sourceCounter++}`, []);\n\n  useEffect(() => {\n    if (map) {\n      const forceUpdate = () => setStyleLoaded(version => version + 1);\n      map.on('styledata', forceUpdate);\n      forceUpdate();\n\n      return () => {\n        map.off('styledata', forceUpdate);\n        // Parent effects are destroyed before child ones, see\n        // https://github.com/facebook/react/issues/16728\n        // Source can only be removed after all child layers are removed\n        /* global setTimeout */\n        setTimeout(() => {\n          // @ts-ignore\n          if (map.style && map.style._loaded && map.getSource(id)) {\n            map.removeSource(id);\n          }\n        }, 0);\n      };\n    }\n    return undefined;\n  }, [map]);\n\n  // @ts-ignore\n  let source = map && map.style && map.getSource(id);\n  if (source) {\n    updateSource(source, props, propsRef.current);\n  } else {\n    source = createSource(map, id, props);\n  }\n  propsRef.current = props;\n\n  return (\n    (source &&\n      React.Children.map(\n        props.children,\n        child =>\n          child &&\n          cloneElement(child, {\n            source: id\n          })\n      )) ||\n    null\n  );\n}\n\nexport default Source;\n","import {useContext, useEffect, useMemo, useState, useRef} from 'react';\nimport {MapContext} from './map';\nimport assert from '../utils/assert';\nimport {deepEqual} from '../utils/deep-equal';\n\nimport type {MapboxMap, AnyLayer} from '../types';\n\nexport type LayerProps = AnyLayer & {\n  id?: string;\n  /** If set, the layer will be inserted before the specified layer */\n  beforeId?: string;\n};\n\n/* eslint-disable complexity, max-statements */\nfunction updateLayer(map: MapboxMap, id: string, props: LayerProps, prevProps: LayerProps) {\n  assert(props.id === prevProps.id, 'layer id changed');\n  assert(props.type === prevProps.type, 'layer type changed');\n\n  if (props.type === 'custom' || prevProps.type === 'custom') {\n    return;\n  }\n\n  const {layout = {}, paint = {}, filter, minzoom, maxzoom, beforeId} = props;\n\n  if (beforeId !== prevProps.beforeId) {\n    map.moveLayer(id, beforeId);\n  }\n  if (layout !== prevProps.layout) {\n    const prevLayout = prevProps.layout || {};\n    for (const key in layout) {\n      if (!deepEqual(layout[key], prevLayout[key])) {\n        map.setLayoutProperty(id, key, layout[key]);\n      }\n    }\n    for (const key in prevLayout) {\n      if (!layout.hasOwnProperty(key)) {\n        map.setLayoutProperty(id, key, undefined);\n      }\n    }\n  }\n  if (paint !== prevProps.paint) {\n    const prevPaint = prevProps.paint || {};\n    for (const key in paint) {\n      if (!deepEqual(paint[key], prevPaint[key])) {\n        map.setPaintProperty(id, key, paint[key]);\n      }\n    }\n    for (const key in prevPaint) {\n      if (!paint.hasOwnProperty(key)) {\n        map.setPaintProperty(id, key, undefined);\n      }\n    }\n  }\n  if (!deepEqual(filter, prevProps.filter)) {\n    map.setFilter(id, filter);\n  }\n  if (minzoom !== prevProps.minzoom || maxzoom !== prevProps.maxzoom) {\n    map.setLayerZoomRange(id, minzoom, maxzoom);\n  }\n}\n\nfunction createLayer(map: MapboxMap, id: string, props: LayerProps) {\n  // @ts-ignore\n  if (map.style && map.style._loaded) {\n    const options: LayerProps = {...props, id};\n    delete options.beforeId;\n\n    // @ts-ignore\n    map.addLayer(options, props.beforeId);\n  }\n}\n\n/* eslint-enable complexity, max-statements */\n\nlet layerCounter = 0;\n\nfunction Layer(props: LayerProps) {\n  const {map} = useContext(MapContext);\n  const propsRef = useRef(props);\n  const [, setStyleLoaded] = useState(0);\n\n  const id = useMemo(() => props.id || `jsx-layer-${layerCounter++}`, []);\n\n  useEffect(() => {\n    if (map) {\n      const forceUpdate = () => setStyleLoaded(version => version + 1);\n      map.on('styledata', forceUpdate);\n      forceUpdate();\n\n      return () => {\n        map.off('styledata', forceUpdate);\n        // @ts-ignore\n        if (map.style && map.style._loaded) {\n          map.removeLayer(id);\n        }\n      };\n    }\n    return undefined;\n  }, [map]);\n\n  // @ts-ignore\n  const layer = map && map.style && map.getLayer(id);\n  if (layer) {\n    try {\n      updateLayer(map, id, props, propsRef.current);\n    } catch (error) {\n      console.warn(error); // eslint-disable-line\n    }\n  } else {\n    createLayer(map, id, props);\n  }\n\n  // Store last rendered props\n  propsRef.current = props;\n\n  return null;\n}\n\nexport default Layer;\n"],"names":["MountedMapsContext","React","transformToViewState","tr","longitude","center","lng","latitude","lat","zoom","pitch","bearing","padding","applyViewStateToTransform","props","v","viewState","changed","constructor","isPaddingEqual","refProps","normalizeStyle","style","toJS","layers","layerIndex","layer","id","map","layerRef","ref","normalizedLayer","interactive","propName","deepEqual","a","b","Array","isArray","length","i","aKeys","Object","keys","bKeys","key","hasOwnProperty","pointerEvents","mousedown","mouseup","mouseover","mousemove","click","dblclick","mouseenter","mouseleave","mouseout","contextmenu","touchstart","touchend","touchmove","touchcancel","cameraEvents","movestart","move","moveend","dragstart","drag","dragend","zoomstart","zoomend","rotatestart","rotate","rotateend","pitchstart","pitchend","otherEvents","wheel","boxzoomstart","boxzoomend","boxzoomcancel","resize","load","render","idle","remove","data","styledata","sourcedata","error","settingNames","handlerNames","Mapbox","MapClass","_map","_internalUpdate","_inRender","_hoveredFeatures","_deferredEvents","_onEvent","e","cb","type","_onPointerEvent","_updateHover","interactiveLayerIds","features","queryRenderedFeatures","point","_onCameraEvent","this","_MapClass","_renderTransform","oldProps","settingsChanged","_updateSettings","transform","clone","sizeChanged","_updateSize","viewStateChanged","_updateViewState","_updateStyle","_updateStyleComponents","_updateHandlers","isMoving","redraw","container","mapOptions","initialViewState","accessToken","mapboxAccessToken","getAccessTokenFromEnv","mapStyle","assign","gl","getContext","HTMLCanvasElement","prototype","setPadding","renderMap","_render","arg","call","runRenderTaskQueue","_renderTaskQueue","run","_onBeforeRepaint","on","_onAfterRepaint","fireEvent","fire","eventName","_fireEvent","bind","width","height","_frame","cancel","nextProps","triggerEvents","deferredEvents","currProps","toUpperCase","slice","cursor","getCanvas","options","diff","styleDiffing","localIdeographFontFamily","setStyle","loaded","light","setLight","fog","setFog","terrain","getSource","source","setTerrain","newValue","enable","disable","onMouseMove","onMouseEnter","onMouseLeave","eventType","wasHovering","isHovering","baseFire","event","properties","location","match","exec","search","process","MapboxAccessToken","REACT_APP_MAPBOX_ACCESS_TOKEN","skipMethods","createRef","mapInstance","mapLib","result","getMap","getCenter","getZoom","getBearing","getPitch","getPadding","getBounds","project","lnglat","locationPoint","LngLat","convert","unproject","pointLocation","Point","obj","Set","proto","getOwnPropertyNames","add","getPrototypeOf","from","getMethodNames","includes","document","useLayoutEffect","useEffect","globalSettings","MapContext","defaultProps","minZoom","maxZoom","minPitch","maxPitch","scrollZoom","boxZoom","dragRotate","dragPan","keyboard","doubleClickZoom","touchZoomRotate","touchPitch","version","sources","projection","renderWorldCopies","onError","console","RTLTextPlugin","Map","forwardRef","mountedMapsContext","useContext","useState","setMapInstance","containerRef","useRef","contextValue","current","mapbox","isMounted","Promise","resolve","then","mapboxgl","default","Error","supported","getRTLTextPluginStatus","setRTLTextPlugin","setGlobals","initialize","onMapMount","catch","target","originalEvent","onMapUnmount","destroy","useIsomorphicLayoutEffect","setProps","useImperativeHandle","useMemo","position","Provider","value","children","displayName","unitlessNumber","applyReactStyle","element","styles","Number","isFinite","test","Marker","marker","hasChildren","el","createElement","setLngLat","thisRef","evt","lngLat","getLngLat","onDragStart","onDrag","onDragEnd","addTo","getElement","offset","ax","x","ay","y","bx","by","arePointsEqual","getOffset","setOffset","isDraggable","draggable","setDraggable","getRotation","rotation","setRotation","getRotationAlignment","rotationAlignment","setRotationAlignment","getPitchAlignment","pitchAlignment","setPitchAlignment","getPopup","popup","setPopup","createPortal","getClassList","className","trim","split","Popup","onOpen","onClose","setDOMContent","isOpen","anchor","maxWidth","setMaxWidth","prevClassList","nextClassList","c","has","removeClassName","addClassName","useControl","onCreate","onRemove","opts","context","ctrl","hasControl","addControl","removeControl","AttributionControl","_container","FullscreenControl","containerId","getElementById","_controlContainer","GeolocateControl","gc","onGeolocate","onOutOfMaxBounds","onTrackUserLocationStart","onTrackUserLocationEnd","trigger","NavigationControl","ScaleControl","unit","setUnit","assert","condition","message","sourceCounter","propsRef","setStyleLoaded","forceUpdate","off","setTimeout","_loaded","removeSource","prevProps","changedKey","changedKeyCount","setData","updateImage","url","coordinates","setUrl","setTiles","tiles","warn","setCoordinates","updateSource","addSource","createSource","child","cloneElement","layerCounter","removeLayer","getLayer","layout","paint","filter","minzoom","maxzoom","beforeId","moveLayer","prevLayout","setLayoutProperty","undefined","prevPaint","setPaintProperty","setFilter","setLayerZoomRange","updateLayer","addLayer","createLayer"],"sourceRoot":""}