{"version":3,"file":"static/js/324.f3398204.chunk.js","mappings":"geAOaA,GAAb,wCAAaA,EACGC,qBAAuB,uBAD1BD,EAEGE,oBAAsB,sBAyItC,UAlIsC,SAACC,GAGTC,EAAAA,SAAAA,aAA5B,IAGMC,GAAgBC,EAAAA,EAAAA,YAAWC,EAAAA,IAC3BC,GAAaF,EAAAA,EAAAA,YAAWG,EAAAA,YAExBC,EAAa,SAACC,EAAaC,GAE/B,IAAMC,EAAQR,EAAcK,WAAWC,GACvC,cAAYE,IAAWD,GACdC,GAKLC,EAAe,SAACC,GACpBP,EAAWQ,YAAYD,EAAEE,OAAOJ,QAG5BK,EAAuB,SAACH,GAC5BV,EAAcc,aAAaJ,EAAEE,OAAOG,KAAML,EAAEE,OAAOI,UA6FrD,OAEE,UAAC,KAAD,CACEC,gBAAgB,EADlB,WAzFE,SAAC,IAAD,WAEE,UAAC,IAAD,YAEE,SAAC,IAAD,CACEC,QAAS,KACTC,cAAc,EAFhB,SAGG,kBAGH,SAAC,IAAD,WACE,UAAC,IAAD,CACEC,MAAM,YACNF,QAAQ,SACRG,GAAI,CAAEC,EAAG,EAAGC,SAAU,KAHxB,WAKE,SAAC,IAAD,CACEC,GAAG,kCADL,2BAIA,UAAC,IAAD,CACEC,QAAQ,kCACRD,GAAG,4BACHhB,MAAOL,EAAWuB,gBAClBC,SAAUlB,EAJZ,WAME,SAAC,IAAD,CACED,MAAOoB,EAAAA,UAAAA,UADT,SAEGA,EAAAA,UAAAA,aAEH,SAAC,IAAD,CACEpB,MAAOoB,EAAAA,UAAAA,WADT,SAEGA,EAAAA,UAAAA,cAEH,SAAC,IAAD,CACEpB,MAAOoB,EAAAA,UAAAA,eADT,SAEGA,EAAAA,UAAAA,+BA0Db,SAAC,IAAD,CAAKP,GAAI,CAAEQ,OAAQ,SAACC,GAAD,OAAWA,EAAMC,QAAQ,QA5C5C,SAAC,IAAD,WAEE,UAAC,IAAD,YAEE,SAAC,IAAD,CACEb,QAAS,KACTC,cAAc,EAFhB,SAGG,kBAGH,UAAC,IAAD,YACE,SAAC,IAAD,CACEa,SACE,SAAC,IAAD,CACEZ,MAAM,YACNL,KAAMpB,EAAYC,qBAClBoB,QAASX,EAAWV,EAAYC,qBAAsB,WACtD+B,SAAUd,IAEdoB,MAAM,8BAER,SAAC,IAAD,CACED,SACE,SAAC,IAAD,CACEZ,MAAM,YACNL,KAAMpB,EAAYE,oBAClBmB,QAASX,EAAWV,EAAYE,oBAAqB,WACrD8B,SAAUd,IAEdoB,MAAM","sources":["views/SettingsView.tsx"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport { Box, Typography, Card, CardContent, FormGroup, FormControl, FormControlLabel, InputLabel, Switch, Select, SelectChangeEvent, MenuItem } from '@mui/material';\r\nimport { SystemContext, ViewContainer } from '@daniel.neuweiler/react-lib-module';\r\nimport { AppContext } from './../contexts';\r\nimport { ViewKeys } from './navigation';\r\nimport { ThemeKeys } from './../styles';\r\n\r\nexport class SettingKeys {\r\n  public static ShowDataOverlayOnMap = 'ShowDataOverlayOnMap';\r\n  public static ShowLogOverlayOnMap = 'ShowLogOverlayOnMap';\r\n};\r\n\r\ninterface ILocalProps {\r\n}\r\ntype Props = ILocalProps;\r\n\r\nconst SettingsView: React.FC<Props> = (props) => {\r\n\r\n  // Fields\r\n  const contextName: string = ViewKeys.SettingsView;\r\n\r\n  // Contexts\r\n  const systemContext = useContext(SystemContext);\r\n  const appContext = useContext(AppContext);\r\n\r\n  const getSetting = (key: string, type: string) => {\r\n\r\n    const value = systemContext.getSetting(key)\r\n    if (typeof (value) === type)\r\n      return value;\r\n\r\n    return false;\r\n  };\r\n\r\n  const handleChange = (e: SelectChangeEvent) => {\r\n    appContext.changeTheme(e.target.value);\r\n  };\r\n\r\n  const handleSettingsChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    systemContext.storeSetting(e.target.name, e.target.checked);\r\n  };\r\n\r\n  const renderAppSettings = () => {\r\n\r\n    return (\r\n      <Card>\r\n\r\n        <CardContent>\r\n\r\n          <Typography\r\n            variant={'h6'}\r\n            gutterBottom={true}>\r\n            {'App settings'}\r\n          </Typography>\r\n\r\n          <FormGroup>\r\n            <FormControl\r\n              color='secondary'\r\n              variant=\"filled\"\r\n              sx={{ m: 1, minWidth: 120 }}>\r\n\r\n              <InputLabel\r\n                id=\"demo-simple-select-filled-label\">\r\n                Theme change\r\n              </InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-filled-label\"\r\n                id=\"demo-simple-select-filled\"\r\n                value={appContext.activeThemeName}\r\n                onChange={handleChange}>\r\n\r\n                <MenuItem\r\n                  value={ThemeKeys.DarkTheme}>\r\n                  {ThemeKeys.DarkTheme}\r\n                </MenuItem>\r\n                <MenuItem\r\n                  value={ThemeKeys.LightTheme}>\r\n                  {ThemeKeys.LightTheme}\r\n                </MenuItem>\r\n                <MenuItem\r\n                  value={ThemeKeys.PineappleTheme}>\r\n                  {ThemeKeys.PineappleTheme}\r\n                </MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n\r\n          </FormGroup>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  const renderMapSettings = () => {\r\n\r\n    return (\r\n      <Card>\r\n\r\n        <CardContent>\r\n\r\n          <Typography\r\n            variant={'h6'}\r\n            gutterBottom={true}>\r\n            {'Map settings'}\r\n          </Typography>\r\n\r\n          <FormGroup>\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  color='secondary'\r\n                  name={SettingKeys.ShowDataOverlayOnMap}\r\n                  checked={getSetting(SettingKeys.ShowDataOverlayOnMap, 'boolean')}\r\n                  onChange={handleSettingsChange} />\r\n              }\r\n              label=\"Show data overlay on map\"\r\n            />\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  color='secondary'\r\n                  name={SettingKeys.ShowLogOverlayOnMap}\r\n                  checked={getSetting(SettingKeys.ShowLogOverlayOnMap, 'boolean')}\r\n                  onChange={handleSettingsChange} />\r\n              }\r\n              label=\"Show log overlay on map\"\r\n            />\r\n          </FormGroup>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  return (\r\n\r\n    <ViewContainer\r\n      isScrollLocked={true}>\r\n\r\n      {renderAppSettings()}\r\n\r\n      <Box sx={{ height: (theme) => theme.spacing(1) }} />\r\n\r\n      {renderMapSettings()}\r\n    </ViewContainer>\r\n  );\r\n}\r\n\r\nexport default SettingsView;\r\n"],"names":["SettingKeys","ShowDataOverlayOnMap","ShowLogOverlayOnMap","props","ViewKeys","systemContext","useContext","SystemContext","appContext","AppContext","getSetting","key","type","value","handleChange","e","changeTheme","target","handleSettingsChange","storeSetting","name","checked","isScrollLocked","variant","gutterBottom","color","sx","m","minWidth","id","labelId","activeThemeName","onChange","ThemeKeys","height","theme","spacing","control","label"],"sourceRoot":""}